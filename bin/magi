#!/usr/bin/env node
'use strict';

const { checkForUpdates } = require('../lib/tools.js');

checkForUpdates();

process.title = 'magi';

const program = require('commander');

program
  .version(require('../package.json').version)
  .command(
    'release-notes <fromVersion> <toVersion>',
    'Draft release notes for the specified version range'
  )
  .command(
    'add-milestone <fromVersion> <toVersion>',
    'Add milestone for <toVersion> to all issues and PRs closed during the specified version range'
  )
  .command(
    'deploy <version>',
    'Build and deploy version <version> to CDN origin'
  )
  .command(
    'webjar <version>',
    'Deploy version <version> on https://www.webjars.org'
  )
  .command(
    'directory',
    'Update https://vaadin.com/directory'
  )
  .command(
    'release <version> [--draft] [--skip-npm] [--skip-cdn] [--skip-webjar]',
    'Release a new <version> of the component (tag, npm, cdn, webjar, etc), or continue the release process if it failed previously'
  )
  .command(
    'p3-convert [modulizerArgs...]',
    'Prepares package.json and runs modulizer with pre-configured arguments'
  )
  .command(
    'check-bower',
    'Checks that Bower dependency ranges are correct for webjars.org deployment'
  )
  .command(
    'check-releases [--sort-commit] [--show-passed]',
    'Shows the information on releases of the components'
  )
  .command(
    'check-version',
    'Checks that version getters in the components are in sync with package.json'
  )
  .command(
    'update-version',
    'Update version getters in the components. Should be run from npm preversion'
  )
  .parse(process.argv);
